#!/usr/bin/env python
# -*- coding: utf-8 -*-
# See top-level LICENSE.rst file for Copyright information
"""Update the status of DESI DTS raw data transfers.
"""
import json
import os
import shutil
import sys
from argparse import ArgumentParser
from pkg_resources import resource_filename


def main():
    """Entry point for command-line script.

    Returns
    -------
    :class:`int`
        An integer suitable for passing to :func:`sys.exit`.
    """
    prsr = ArgumentParser(description=__doc__,
                          prog=os.path.basename(sys.argv[0]))
    prsr.add_argument('-d', '--directory', dest='directory', metavar='DIR',
                      default=os.path.join(os.environ['DESI_ROOT'],
                                           'spectro', 'staging', 'status'),
                      help="Install and update files in DIR.")
    prsr.add_argument('-f', '--failure', action='store_true', dest='failure',
                      help='Indicate that the transfer failed somehow.')
    prsr.add_argument('-i', '--install', action='store_true', dest='install',
                      help='Ensure that HTML and related files are in place.')
    prsr.add_argument('-l', '--last', dest='last', default='',
                      choices=['flats', 'arcs', 'science'],
                      help='Indicate that a certain set of exposures is complete.')
    prsr.add_argument('night', type=int, metavar='YYYYMMDD',
                      help="Night of observation.")
    prsr.add_argument('expid', type=int, metavar='N',
                      help="Exposure number.")
    options = prsr.parse_args()
    if options.install:
        for ext in ('css', 'html', 'js'):
            src = resource_filename('desispec', 'data/dts/dts_status.' + ext)
            if ext == 'html':
                shutil.copyfile(src, os.path.join(options.directory, 'index.html'))
            else:
                shutil.copy(src, options.directory)
    success = 'failure' if options.failure else 'success'
    row = [options.night, options.expid, success, options.last]
    with open('dts_status.json') as j:
        s = json.load(j)
    s.append(row)
    with open('dts_status.json', 'w') as j:
        json.dump(s, j, indent=None, separators=(',', ':'))
    return 0


if __name__ == '__main__':
    sys.exit(main())
